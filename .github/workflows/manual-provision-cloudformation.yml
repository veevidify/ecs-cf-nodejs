# This workflow is manually triggered
# Use to provide the cloudstack from scratch or provide infra update

name: "(Manual) Provision cloud stack via AWS CloudFormation"

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Configurable manual dispatch
    inputs:
      appenv:
        type: choice
        description: "Staging or production"
        default: "staging"
        required: true
        options:
          - staging

jobs:
  deploy:
    # runner environment (distro)
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Provision AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ vars.CLOUD_STACK_NAME }}
          template: ops/${{ inputs.appenv }}/stack.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: >-
            KeyName=${{ vars.EC2_KEYPAIR }},
            VpcId=${{ vars.SERVICE_VPC }},
            SubnetIds="${{ vars.SERVICE_SUBNETS }}",
            DesiredCapacity=1,
            MaxSize=2,
            InstanceType=t3.micro,
            InstanceAmi=${{ vars.AMZ_LINUX_AMI }},
            EcrNginxImage=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/${{ vars.IMAGE_NGINX }}:latest,
            EcrAppImage=${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/${{ vars.IMAGE_NODE }}:latest
